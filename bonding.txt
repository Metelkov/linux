настройка bond 0 через netplan
(ubuntu 22.04  /  ubuntu 24.04  )

apt-get install ifenslave-2.6


сам конфиг такой:

network:
  ethernets:
    ens11f0:
      dhcp: false
    ens11f1:
      dhcp: false
    ens11f2:
      dhcp: false
    ens11f3:
      dhcp: false
   bonds:
     bond0:
       interfaces:
         - ens11f0
         - ens11f1
        parameters:
          mode: 802.3ad
          lacp-rate: fast
        mtu: 9100
        addresses:
          - 10.10.10.10/24
        nameservers:
          addresses:
            - 1.1.1.1
          search: []
        routes:
          - to: default
            via: 10.10.10.1
  version: 2


отключаем интерфейсы в ethernets на которых быдет собираться бонд, у него свои интерфейсы
bond0        --тип бонда - о нем ниже
ens11f0      --интерфейсы которые будем задействовать
mode         -- режимы и протоколы
mtu          -- мту

далее как в обычном конфиге сети

Для бонда нужен 2,5 уровневый коммутатор, который будет понимать протоколы
Некоторые старые устройства или операционные системы могут не поддерживать все режимы bonding
(вроде ускорить сеть не получится - гигабит в железе и есть гигабит)

режимы:

Mode 0 (Round-robin) — Использует метод кругового распределения трафика между интерфейсами. 
Этот режим позволяет максимизировать пропускную способность, равномерно распределяя трафик 
между всеми активными интерфейсами. Однако, он может не обеспечивать отказоустойчивости.
Последовательно кидает пакеты, с первого по последний интерфейс.

Mode 1 (Active-backup) — Один интерфейс является активным, а остальные — резервными. 
Если активный интерфейс выходит из строя, резервный интерфейс автоматически становится активным. 
Это повышает отказоустойчивость сети, но не увеличивает пропускную способность.

Mode 2 (XOR) — Использует алгоритм XOR для распределения трафика между интерфейсами. Это приводит 
к более сбалансированному распределению трафика, но в отличие от Mode 0 не увеличивает 
пропускную способность в равной степени.
Передачи распределяются между интерфейсами на основе формулы ((MAC-адрес источника) 
XOR (MAC-адрес получателя)) % число интерфейсов. Один и тот же интерфейс работает с определённым 
получателем. Режим даёт балансировку нагрузки и отказоустойчивость.

Mode 3 (Broadcast) — Все интерфейсы передают трафик одновременно, что позволяет повысить отказоустойчивость,
но пропускная способность не увеличивается, так как данные передаются по всем интерфейсам.
Все пакеты на все интерфейсы

Mode 4 (802.3ad – LACP) — Использует стандарты IEEE 802.3ad для создания канала с агрегированным 
соединением. Этот режим помогает не только увеличить пропускную способность, но и улучшить 
отказоустойчивость за счет использования динамического протокола агрегирования.
Link Agregation — IEEE 802.3ad, требует от коммутатора настройки

Mode 5 (Balance-tlb) — Использует динамическую балансировку нагрузки, основанную на текущей загрузке 
каждого интерфейса. Это позволяет эффективно распределять трафик в зависимости от пропускной 
способности каждого интерфейса.
Входящие пакеты принимаются только активным сетевым интерфейсом, исходящий распределяется в 
зависимости от текущей загрузки каждого интерфейса. Не требует настройки коммутатора.

Mode 6 (Balance-alb) — Подобен Mode 5, но с дополнением поддержки балансировки нагрузки на уровне 
приема и передачи данных (на двустороннем соединении). Это позволяет добиться еще большей 
эффективности в распределении трафика.
Тоже самое что 5, только входящий трафик тоже распределяется между интерфейсами. Не требует 
настройки коммутатора, но интерфейсы должны уметь изменять MAC.


на устаревших системах можно пробовать так:

Вариант №1 Подправить /etc/network/interfaces к примеру так.
iface bond0 inet static
 address 10.0.1.5
 netmask 255.255.255.0
 network 10.0.1.0
 gateway 10.0.1.254
 up /sbin/ifenslave bond0 eth0 eth1
 down /sbin/ifenslave -d bond0 eth0 eth1
и подправить /etc/modprobe.d/arch/i386 примерно так
alias bond0 bonding

options bonding mode=5 miimon=100 downdelay=200 updelay=200
Естественно указать свой режим и настройки сети.
# update-modules
# ifdown eth0 eth1
# ifup bond0
# /etc/init.d/networking restart


Вариант №2 Все настройки через /etc/network/interfaces
 iface bond0 inet static
 address 10.0.1.5
 netmask 255.255.255.0
 network 10.0.1.0
 gateway 10.0.1.254
 bond_mode balance-tlb
 bond_miimon 100
 bond_downdelay 200
 bond_updelay 200
 slaves eth0 eth1

Сохраняем и пишем:

update-modules
# ifdown eth0 eth1
# ifup bond0
# /etc/init.d/networking restart

После этого должен появится один интерфейс bond0. Далее можно плодить интерфейсы bon0:0 и т.д.
