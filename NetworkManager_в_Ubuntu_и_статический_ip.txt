NetworkManager в Ubuntu
смена ip адреса и статический ip

//      Устанавливаем текстово-графический редактор.
//      yum install NetworkManager-tui
//
//      для редактирования активного интерфейса.
//      nmtui edit enp6s0


далее все через командную строку
(Инструмент может работать с устройствами (devices, dev) или с соединениями (connection, con))

# установить IP-адрес для устройства enp6s0
nmcli device modify enp6s0 ipv4.address 192.168.32.97/24
или nmcli con mod Проводное\ соединение\ 1 ipv4.address 192.168.32.97/24  (может придется взять в кавычки)

# установить адрес шлюза для устройства enp6s0
nmcli device modify enp6s0 ipv4.gateway 192.168.32.1

# установить адрес DNS для устройства enp6s0
nmcli device modify enp6s0 ipv4.dns 192.168.32.1

# проверить настройки устройства enp6s0
nmcli device show enp6s0

для применения перезапустить интерфейс
sudo systemctl restart NetworkManager
-----------------------------------------------
Команда для подключения к новой сети wifi.
Например, давайте подключимся к сети TP-Link с паролем 12345678:

nmcli device wifi connect "TP-Link" password 12345678 name "TP-Link Wifi"

-----------------------------------------------
Предотвращение дублирования сетевых адресов
NetworkManager использует параметр сетевого интерфейса ipv4.dad-timeout. 

Значения этого параметра:
любое положительное число — периодичность проверки в миллисекундах. Если задано положительное значении параметра, то 
при смене адреса перед активацией интерфейса выполняется проверка дублирования. Проверка выполняется с заданной периодичностью. 
Активация интерфейса не производится до успешного завершения проверки (т.е. дублирование отсутствует).

Проверка дублирования выполняется только при смене (назначении) адреса. При включении интерфейса с ранее назначенным адресом проверка не выполняется.

0 — проверка не выполняется ;
-1 — применяется по умолчанию. Указывает, что используется значение 0 (проверка не выполняется). Иное значение, применяемое по 
умолчанию, может быть задано в секции [connection] конфигурационных файлов. 
Для задания значения в конфигурационном файле отдельного сетевого интерфейса параметр можно разместить в секции [ipv4]:

   Синтаксис команды переопределения значения с помощью интерфейса командной строки:
   sudo nmcli con mod <имя_соединения> ipv4.dad-timeout <значение>
   Например:
   sudo nmcli con mod Проводное\ соединение\ 1 ipv4.dad-timeout -1

-----------------------------------------------------
Синтаксис и опции nmcli
nncli опции объект команда

Чаще всего в nmcli мы будем использовать такие объекты:
device - управление сетевыми интерфейсами;
connection - управление соединениями;
networking - управление сетью в целом;
general - показывает состояние всех сетевых протоколов и NetworkManager в целом;
radio - управление сетевыми протоколами, wifi, ethernent и т д.


 Запустить NetworkManager
systemctl start NetworkManager

Теперь смотрим состояние интерфейсов с помощью nmcli:
nmcli general status

Еще мы можем посмотреть имя хоста:
nmcli general hostname

Получаем состояние интерфейсов
nmcli device status

Выводим список доступных сетевых адаптеров.
nmcli -p dev

Смотрим список доступных подключений:
nmcli connection show


Здесь вы можете видеть одно, например, "Проводное подключение 2" для интерфейса, например, enp24s0.
С помощью следующей команды можно посмотреть информацию о нём, да, управление по названию
не оч удобны, особенно если в названии русские буквы:

nmcli connection show "Проводное соединение 2"


Управление подключениями
Чтобы подключится к сети с помощью нужного подключения используйте команду up:

nmcli connection up "Проводное соединение 2"      или
nmcli conn up "Проводное соединение 2"


А для деактивации подключения используйте команду down:
nmcli conn down "Проводное соединение 2"


Создание DHCP соединения
Чтобы создать новое подключение используйте команду add. Например создадим новое подключение с именем dhcp:
Команде надо передать параметр type - тип устройства, в нашем случае ethernet (Проводное соединение), а также ifname - название сетевого 
интерфейса, в этом примере enp24s0. По умолчанию используется тип подключения DHCP, поэтому больше ничего настраивать не надо и вы 
можете уже активировать это подключение как описано выше.

nmcli connection add con-name "dhcp" type ethernet ifname enp24s0



Создание соединения с статическим адресом
Для статического подключения настроек больше, вам надо передать команде add ip адрес, который будет использоваться в качестве 
основного в параметре ip4, а также шлюз с помощью параметра gw4:

nmcli connection add con-name "static" ifname enp2s0 autoconnect no type ethernet ip4 192.168.0.210 gw4 192.168.0.1


Настройка подключения и добавление DNS
Продолжим настройку нашего статического соединения. Обычно оно уже может работать, но вы можете захотеть добавить DNS сервер. Для этого используется команда modify:

nmcli conn modify "static" ipv4.dns 8.8.8.8

И ещё один DNS сервер с помощью оператора +:
nmcli conn modify "static" +ipv4.dns 8.8.4.4

Для добавления дополнительной информации в поле используйте символ +. 
Например, вот так можно добавить еще один ip адрес:

nmcli conn modify "static" +ipv4.addresses 192.168.0.240/24


Теперь можете активировать подключение:
nmcli connection up static

------------------------------------------
          Настройка        Wifi

Смотрим состояние wifi:
nmcli radio wifi

Теперь включаем:
nmcli radio wifi on

Или отключаем:
nmcli radio wifi off


Такой командой можно посмотреть список доступных сетей wifi:
nmcli device wifi list

nmcli device wifi connect <SSID> password XXX name YYY
Расшифровка следующая:
SSID – имя беспроводной сети, к которой подключаемся.
XXX – пароль Wi-FI.
YYY – имя, которое будет сохранено в настройках.


Команда для подключения к новой сети wifi.
Например, давайте подключимся к сети TP-Link с паролем 12345678:

nmcli device wifi connect "TP-Link" password 12345678 name "TP-Link Wifi"






