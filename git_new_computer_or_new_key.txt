(последняя проверка 20240125)

Устанавливаем и настраиваем Git - Запуск на новом компьютере
apt-get install git.

Откройте терминал и введите команду
git --version

Если Git установлен, то вы увидите номер версии, например, 2.35.1.

Настраиваем Git
Теперь нужно ввести имя и адрес электронной почты, чтобы ваши действия в Git были подписаны, 
а ещё для привязки к GitHub.

Добавить имя (введите его внутри кавычек):
git config --global user.name "ваше имя"

Добавить электронную почту (замените email@example. com на вашу почту):
git config --global user.email email@example.com

Опция --global значит, что имя и почта будут использоваться для всех ваших действий в Git. Если 
вы хотите менять эту информацию для разных проектов, то вводите эти же команды, только без 
опции --global.

Устанавливаем SSH-ключи
Перед созданием нового SSH-ключа проверим, есть ли на компьютере другие ключи. Обычно они лежат 
в папке с названием .ssh — поэтому посмотрим, есть ли в ней что-то, с помощью команды в терминале:
ls -al ~/.ssh   --будет работать для пользователя под которым сидим

Если у вас уже есть SSH-ключ, то в списке будут файлы с именами вроде id_rsa.pub, id_ecdsa.pub 
или id_ed25519.pub. А если терминал ругается, что директории ~/.ssh не существует, 
значит, у вас нет SSH-ключей.


(последняя проверка 20240125)
Создаём новый SSH-ключ
Откройте терминал и скопируйте туда эту команду. Не забудьте подставить в кавычки почту, на которую вы 
регистрировались на Гитхабе.
ssh-keygen -t ed25519 -C "your_email@example.com"

ed25519 — это алгоритм для генерации ключей. Если ваша система не поддерживает алгоритм ed25519 (и вы увидели ошибку), 
используйте немного другую команду с алгоритмом rsa:
ssh-keygen -t rsa -b 4096 -C "your_email@example.com"

Терминал спросит, куда сохранить ключ. Если не хотите менять имя файла, которое предлагает терминал, просто нажмите Enter.
> Generating public/private имя-ключа key pair.
> Enter a file in which to save the key (/c/Users/ваш-профиль/.ssh/id_имя-ключа):*[Press enter]*

Теперь нужно добавить пароль, которым будет зашифрован ваш ключ.
В результате создаётся новый SSH-ключ, привязанный к вашей электронной почте.

будет создано два ключа - открытый и закрытый, закрытый должен быть в директории пользователя и никуда не копироваться,
никому не передаваться - это файл без расширения id_ed25519
а открытый ключ, который будем отдевать на сайт гита будет с расшиенем
id_ed25519.pub

Создание ключа по шагам:
обавляем SSH-ключ в ssh-agent
ssh-agent — программа для хранения и управления SSH-ключами. Давайте запустим её и добавим туда наш SSH-ключ. 
Запускаем командой eval "$(ssh-agent -s)":
eval "$(ssh-agent -s)"
Если в ответ терминал покажет надпись «Agent pid» и число — значит, всё ок, агент запущен.
Теперь добавим наш ключ командой.
ssh-add ~/.ssh/id_ed25519
Если у вашего ключа другое имя, замените название id_ed25519 именем файла с ключом (это правило применяется и 
дальше в инструкции). Если вы устанавливали пароль на ключ, введите его два раза после ввода 
команды ssh-add (терминал подскажет, когда это сделать).
Теперь, если всё хорошо, появится надпись Identity added — значит, можно переходить к добавлению ключа на GitHub.


Копируем SSH-ключ
Найдите скрытую папку .ssh, откройте файл id_ed25519.pub в текстовом редакторе и скопируйте его содержимое.  
если сидим под root то и ./ssh искать в root и работать под root
cat ~/.ssh/id_ed25519.pub
вот что то на подобии такого - это копируем в буфер (все копируем, вообще все)
ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIO63MT6VCFuZtCLhLj1J6I7dgEU2BsRdIsnvnr4ax+Fr shklyar@htmlacademy.ru

Добавляем SSH-ключ на GitHub
Перейдите на страницу для работы с ключами в вашем профиле на GitHub и нажмите кнопку New SSH key. В поле Title нужно 
добавить название нового ключа. Например, если вы используете Mac, вы можете назвать ключ MacBook Air, или, если 
ключ для курсов Академии, то Academy. А ключ, который вы скопировали на прошлом шаге, вставьте в поле Key.
Теперь нажмите кнопку Add SSH key и, если потребуется, введите свой пароль от GitHub, чтобы подтвердить сохранение. 
Если всё сделано верно, новый ключ появится в списке на странице https://github.com/settings/keys

чтобы использовать доступ по ключу - (если ключ новый)  ОБЯЗАТЕЛЬНО, чтобы репозиторий клонировался по ssh. 
для этого перейти на стр репозитория - зеленая кнопка, которая как выпадающее меню - раскрыть, там локал и с https 
переключить на ssh и только после склонировать. после с компьютера можно пользоваться через ssh
