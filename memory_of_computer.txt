----память:
1.регистры - маленькие ячейки памяти в процессоре - чтобы выполнять инчтрукции их нужно получать из памяти и где то их сохранять. свмый маленький размер - байты, но самый быстрый.
2.кэш - хранилище для часто используемых процессором данных, чочтоит из уровней.
3.оперативная - в ней находятся программы которые выпоняются в данный момент времени.
4.внешние накопители.

*бит - мин еденица хранения инф 1 или 0
*байт - группа битов по 8 шт - 1байт=8бит
обращение к отдельному биту у процессора невозможно, он обращается к байту
*байт - мин ячейка адресации
поэтому bool требует для хранения 1 байт памяти
(битовый вектор -структура- может представить каждый бит байта булевым значением)
*каждая ячейка имеет последовательные адреса, по которым процессор к ним обращается
*когда каждый байт имеет отдельный адрес - вид адресации - байтовый
*машинное слово - макс кол-во бит, которыми может оперировать процессор за раз, обмениваться с оперативной памятью, хранить их в регистрах... т.е. в 32разрядных процессорах размер регистров и размер машинного слова будет равен 32 бит, в 64битных = 64бит
*словесная адресация - когда компьютер обращается не к байту, а к слову

почему используется 8разрядные ячейки?
байтовая адресация быстрее словесной (за счет того, что процессор работает с текстом - основная информация. ятобы изменить символ - нужно найти его адрес в памяти и перезаписать, а если использовать словесную адресацию, то вся инф будет находиться в 32битной яыейки и чтобы найти нужный символ, нужно всю ячейку поместить в регистр, по битам искать где нужный символ, отбрасывать лишние биты... НО для компьютеров которые работают с числами - лучше подходит словесная адресация)

логический тип адреса - адрес начала сегмента (селектор) + смещение
в режиме реальных адресов вся память делется на сегменты 64кб
в 64разрядных системах доступно не 2^64, байт памяти, а 2^52 физической памяти и до 2^48 байт виртуальной памяти, это вызвано ограничением архитектурой процессора и операционной системы

адреса к которым процессор обращается представляют обычные числа, эти адреса задаются в регистре, макс значение которое может хранить в себе регистр = 2 в степени размер регистра - максимальное кол-во адресов оперативной памяти которое можно адресовать.

способы хранения числа в памяти:

числовые типы данных относятся к примитивам, особенность - копируются по значению, а не по ссылке, т.е. присваивая в новую переменную уже существующую - будет выделен другой участок памяти и число будет туда скопировано. Они ссылаются на разные значения в памяти и это 2 независимые друг от друга переменные.

с сылочными типами данных все на оборот.

----кэш процессора:

----процессор:
разрядность - величина, которая определяет размер машинного слова.
машинное слово - макс величина бит, которыми процессор может оперировать за раз
(см адрес байта (адресное пространство) к которому можно обратиться - сколько можно адресовать памяти)
процессор после включения начинает постоянно выполнять комманды и не заканчивает до тех пор, пока не будет выключен. Выполнение комманд начинается с жестко фиксированного адреса. по этому адресу распологается bios. 
Но пред тем как приступить к выполнению очередной коммандв её нужно считать из памяти и куда то себе положить, чтобы с ней можно было работать. Для этого есть 2 вида памяти - регистры и кэш. 
Регистры - маленьките ячейки памяти расположенные на самом процессоре, именно в них процессор загружает числа из памяти - переменные, рез вычислений... Регистры имеют размер 8, 16, 32, 64 бит. Максимальный размер регистра = разрядность процессора. Регистр должен быть кратен ячейки оперативной памяти. 
Регистры специального назначения и общего назначения. Общего назначения - используют программисты как хотят (но есть правила и стандарты!). Регистры спец назначения предназначчаются для какого то конкретного содержания в них. Сегментные регистры - хранят адр памяти, регистры для стека, флаговые регистры.
Переполнение регистров - если складываются 2 больших числа или вычитаются 2 больших отрицательных числа. В 
этом случае старшие биты, которые не влезли отсекаются и рез будет оставшиеся биты. Но на самом деле переполнение означает, что мы продолжаем отсчет с противоположного конца. Если мы складываем число с одним знаком, а получаем с другим - значит произошло переполнение.
Процессора работет в неск режимах:
1. режим реальных адресов - всегда 16 бит, процессор переходит в него сразу после включения. называется так, потомучто адрес сформированный программами является реальным и не требует каких либо доп преобразований.
2. защищеный = 32битный режим. в него можно прейти только из режима реальных адресов. Защищеный значит обеспечивается защита данных операционной системы от прикладных программ и данных этих программ друг от друга благодаря разделения прложений на разные уровни привелегий.
3. 64битный режим - в него можно перейти только из 32битного режима, в нем так же соблюдается защита программ друг от друга. Но по классификации intel и amd  есть всего 2 режима: реальные адр+защищеный - 32бит = (legacy mode) и 64 битный - 32битный + 64 битный = long mode.
В режиме реальных адресов нет привелегий, т.к. вв этом режиме может выполняться только одна программа.







